@model IEnumerable<NIA_CRM.Models.ContactCancellation>

@{
    ViewData["Title"] = "Contact Cancellation";
}

 <partial name="_Notification" />
<form asp-action="Index" method="get" aria-labelledby="contacts-title">
    @{
        var sortField = ViewData["sortField"]?.ToString();
        var sortDirection = ViewData["sortDirection"]?.ToString();
    }
    <input type="hidden" name="sortField" value="@sortField" />
    <input type="hidden" name="sortDirection" value="@sortDirection" />

    <div class="m-auto flex-grow-1">
        <div class="form-horizontal mb-3">
            <div class="d-flex justify-content-between align-items-center">
                <button class="btn btn-dark @ViewData["Filtering"]" type="button" id="filterToggle" data-bs-toggle="collapse" data-bs-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter">
                    Filter/Search @ViewData["numberFilters"]
                </button>
            </div>

            @if (ViewData["numberFilters"]?.ToString() != "0 Filters Applied")
            {
                <div class="filters-container mt-2">
                    @if (ViewData["DateFilter"] != null)
                    {
                        <span class="custom-filter-badge me-2">
                            Date: @Convert.ToDateTime(ViewData["DateFilter"]).ToString("yyyy-MM-dd")
                            <button type="button" class="ms-2 clear-btn" aria-label="Clear" onclick="clearFilter('DateFilter')">x</button>
                        </span>
                    }
                </div>
            }
        </div>

        <div class="collapse @ViewData["ShowFilter"] mt-2" id="collapseFilter">
            <div class="card card-body bg-light">
                <div class="row">
                    <div class="form-group col-md-3">
                        <label for="filter-from-date" class="control-label">Filter From Cancellation Date:</label>
                        <input type="date" name="dateFrom" class="form-control" id="filter-from-date" value="@ViewData["DateFilter"]" />
                    </div>
                    <div class="form-group col-md-3">
                        <label for="filter-to-date" class="control-label">Filter To Cancellation Date:</label>
                        <input type="date" name="dateTo" class="form-control" id="filter-to-date" value="@ViewData["DateFilter"]" />
                    </div>
                    <div class="form-group col-md-4 d-flex align-items-end mt-2">
                        <input type="submit" name="actionButton" value="Apply Filters" class="btn btn-primary me-2" />
                        <a asp-action="Index" class="btn btn-dark">Clear Filters</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <table class="table table-bordered table-striped" id="contacts-table" aria-labelledby="contacts-title">
        <caption class="sr-only">Archieve Contacts table showing filtered results</caption>
        <thead class="thead-dark">
            <tr>
                <th scope="col" class="table-head">
                    @{
                        var isCurrentSortField = sortField == "Contact";
                        var newSortDirection = (isCurrentSortField && sortDirection == "asc") ? "desc" : "asc";
                        var sortOrderIndicator = isCurrentSortField ? (sortDirection == "asc" ? "↑" : "↓") : "";
                    }

                    <button type="submit" name="sortField" value="Contact" class="btn btn-link" aria-label="Sort by Contact">
                        Contact <span class="SortIndicator">@sortOrderIndicator</span>
                    </button>

                    <input type="hidden" name="sortDirection" value="@newSortDirection" />
                </th>

                <th scope="col" class="table-head">Archiving Date</th>
                <th scope="col" class="table-head">Archiving Note</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr class="clickable-row" data-id="@item.ID" title="Click on row to get preview">
                    <td>
                        @Html.DisplayFor(modelItem => item.Contact.Summary)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CancellationDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CancellationNote)
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <partial name="_PagingNavBar" />
</form>

<div id="previewContainer" class="preview-content hidden" role="region" aria-labelledby="previewTitle">
    <h2 id="previewTitle" class="sr-only">Preview Section</h2>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/js/PhoneNumber.js"></script>
    <script>
        $(document).ready(function () {
            $('#previewContainer').addClass('hidden');

            $(document).on('click', '.clickable-row', function () {
                var contactId = $(this).data('id');
                if (!contactId) return;

                $.ajax({
                    url: '/ContactCancellation/GetCancellationPreview',
                    type: 'GET',
                    data: { id: contactId },
                    success: function (result) {
                        $('#previewContainer').html(result).removeClass('hidden').addClass('visible');
                        $('#previewContainer').find('input[name="btnClose"]').on('click', function () {
                            $('#previewContainer').removeClass('visible').addClass('hidden');
                        });
                    },
                    error: function () {
                        alert('An error occurred while loading the preview.');
                    }
                });
            });

            $(window).click(function (event) {
                if (!$(event.target).closest('#previewContainer, .clickable-row').length) {
                    $('#previewContainer').removeClass('visible').addClass('hidden');
                }
            });

            $('#previewContainer').click(function (event) {
                event.stopPropagation();
            });
        });

        function clearFilter(filterName) {
            var url = window.location.href.split('?')[0];
            var params = new URLSearchParams(window.location.search);
            params.delete(filterName);
            window.location.href = url + '?' + params.toString();
        }
    </script>
    <script>
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });
    </script>
}
