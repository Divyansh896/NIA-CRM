@model IEnumerable<NIA_CRM.Models.ContactCancellation>

@{
    ViewData["Title"] = "Index";
}

<<<<<<< HEAD
<h1>Contact Cancellation</h1>

<form>
	<input type="hidden" name="sortDirection" value="@ViewData["sortDirection"]" />
	<input type="hidden" name="sortField" value="@ViewData["sortField"]" />
	@{
		var sortField = ViewData["sortField"]?.ToString();
		var sortDirection = ViewData["sortDirection"]?.ToString();
	}



	<!-- Filter/Search Section -->
	<div class="m-auto flex-grow-1">
		<div class="form-horizontal mb-3">
			<div class="d-flex justify-content-between align-items-center">
				<div>
					<button class="btn btn-dark @ViewData["Filtering"]"
							type="button"
							id="filterToggle"
							data-bs-toggle="collapse"
							data-bs-target="#collapseFilter"
							aria-expanded="false"
							aria-controls="collapseFilter">
						Filter/Search @ViewData["numberFilters"]
					</button>
				</div>
				<a asp-action="Create" class="btn btn-primary" aria-label="Add a new Contact Cancellation">+ Add Contact Cancellation</a>
			</div>

			@if (ViewData["numberFilters"] != null && ViewData["numberFilters"].ToString() != "0 Filters Applied")
			{
				<div class="filters-container mt-2">
					@if (ViewData["DateFilter"] != null)
					{
						<span class="custom-filter-badge me-2">
							Date: @Convert.ToDateTime(ViewData["DateFilter"]).ToString("yyyy-MM-dd")
							<button type="button" class="ms-2 clear-btn" aria-label="Clear" onclick="clearFilter('DateFilter')">x</button>
						</span>
					}
				</div>


			}

		</div>
		<div class="collapse @ViewData["ShowFilter"] mt-2" id="collapseFilter">
			<div class="card card-body bg-light">
				<div class="row">
					<div class="form-group col-md-3">
						<label for="filter-date" class="control-label">Filter From Cancellation Date:</label>
						<input type="date" name="dateFrom" class="form-control" id="filter-from-date" value="@ViewData["DateFilter"]" />
					</div>
					<div class="form-group col-md-3">
						<label for="filter-date" class="control-label">Filter To Cancellation Date:</label>
						<input type="date" name="dateTo" class="form-control" id="filter-to-date" value="@ViewData["DateFilter"]" />
					</div>
					<div class="form-group col-md-4 d-flex align-items-end mt-2">
						<input type="submit" name="actionButton" value="Apply Filters" class="btn btn-primary me-2" />
						<a asp-action="Index" class="btn btn-dark">Clear Filters</a>
					</div>
				</div>
			</div>
		</div>

<table class="table">
    <thead>
        <tr>
                    <th scope="col" class="table-head">
                @Html.DisplayNameFor(model => model.CancellationDate)
            </th>
                    <th scope="col" class="table-head">
                        @Html.DisplayNameFor(model => model.CancellationNote)
            </th>
                    <th scope="col" class="table-head">
                @Html.DisplayNameFor(model => model.IsCancelled)
            </th>
                    <th scope="col" class="table-head">
                @Html.DisplayNameFor(model => model.Contact)
            </th>
                    <th scope="col" class="table-head"></th>
=======
<h1>Archivied Contacts</h1>

<p>
    <a asp-action="Create">Create New</a>
    <a asp-action="ExportToExcel">Export to Excel</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th scope="col" class="table-head">
                @Html.DisplayNameFor(model => model.CancellationDate)
            </th>
            <th scope="col" class="table-head">
                @Html.DisplayNameFor(model => model.CancellationNote)
            </th>
            <th scope="col" class="table-head">
                @Html.DisplayNameFor(model => model.IsCancelled)
            </th>
            <th scope="col" class="table-head">
                @Html.DisplayNameFor(model => model.Contact)
            </th>
            <th scope="col" class="table-head"></th>
>>>>>>> origin/master
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CancellationDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CancellationNote)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsCancelled)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Contact.FirstName)
            </td>
                <td class="d-flex flex-column">
                    <a class="btn btn-secondary mb-2" asp-action="Details" asp-route-id="@item.ID">Details</a>
                    <a class ="btn btn-light mb-2" asp-action="Edit" asp-route-id="@item.ID">Edit</a>
                    <a class="btn btn-light mb-2" asp-action="Delete" asp-route-id="@item.ID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
        <partial name="_PagingNavBar" />
</form>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        function clearFilter(filterName){
            // Get the current URL
            var url = window.location.href.split('?')[0]; // Current URL without query string

            // Get the query parameters from the URL
            var params = new URLSearchParams(window.location.search);
            params.delete(filterName)

            // Reload the page with the updated query string (filters removed)
            window.location.href = url + '?' + params.toString();

        }
    </script>
    <script type="text/javascript">
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })
    </script>
}
