@model NIA_CRM.Models.Member

<h3>Preview Member Details</h3>

@{
    if (Model.MemberThumbnail?.Content != null)
    {
        string imageBase64 = Convert.ToBase64String(Model.MemberThumbnail.Content);
        string imageSrc = string.Format("data:" + Model.MemberThumbnail.MimeType + ";base64,{0}", imageBase64);
        <img src="@imageSrc" alt="Profile Picture of @Model?.MemberName"
             title="Profile Picture of @Model?.MemberName" class="img-fluid rounded" />
    }
    else
    {
        <img src="images/blankProfile.jpg" alt="blank profile picture"
             title="blank profile picture" class="img-fluid rounded" style="margin-right: 5px !important;" />
    }
}

<div class="card card-body bg-light text-black">
    <div>
        <dt>Member Name:</dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.MemberName)
        </dd>

        <dt><strong>Address:</strong></dt>
        @if (Model.Addresses != null && Model.Addresses.Any())
        {
            foreach (var address in Model.Addresses)
            {
                <dd>
                    @address.AddressLine1<br />
                    @if (!string.IsNullOrEmpty(address.AddressLine2))
                    {
                        @address.AddressLine2
                        <br />
                    }
                    @address.City, @address.StateProvince, @address.PostalCode<br />
                    @address.Country
                </dd>
            }
        }
        else
        {
            <p>No addresses available.</p>
        }

        <dt class="col-sm-4">Membership Type:</dt>
        <dd class="col-sm-8">
            @if (Model.MemberMembershipTypes != null && Model.MemberMembershipTypes.Any())
            {
                @foreach (var membership in Model.MemberMembershipTypes)
                {
                    <p>@membership.MembershipType.TypeName</p>
                }
            }
            else
            {
                <p>No membership type available.</p>
            }
        </dd>

        <dt class="col-sm-4">Website:</dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.WebsiteUrl)
        </dd>

        <dt class="col-sm-4">Join Date:</dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.JoinDate)
        </dd>

        <dt class="col-sm-4">Time Since Joined:</dt>
        <dd class="col-sm-8">
            @Model.TimeSinceJoined
        </dd>
    </div>


<div class="mt-3">
    <label for="memberNote"><strong>Additional Notes:</strong></label><br />
    <textarea id="memberNote" name="memberNote" class="form-control" rows="4" placeholder="Add notes here..." data-id="@Model.ID"></textarea>
</div>
</div>
<div class="sticky-buttons mt-3">
    <div class="sticky-buttons-container">
        <a class="btn btn-dark" asp-controller="Cancellation" asp-route-id="@Model.ID">Archive</a>
        <a class="btn btn-dark" asp-controller="Cancellation" asp-action="Edit" asp-route-id="@Model.ID">Edit</a>
        <a class="btn btn-primary" asp-controller="Cancellation" asp-action="Details" asp-route-id="@Model.ID">Details</a>
    </div>
</div>
