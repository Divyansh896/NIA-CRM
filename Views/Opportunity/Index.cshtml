@model IEnumerable<NIA_CRM.Models.Opportunity>

@{
	ViewData["Title"] = "Index";
}

<h1>Opportunity</h1>

<form>
	<input type="hidden" name="sortDirection" value="@ViewData["sortDirection"]" />
	<input type="hidden" name="sortField" value="@ViewData["sortField"]" />
	@{
		var sortField = ViewData["sortField"]?.ToString();
		var sortDirection = ViewData["sortDirection"]?.ToString();
	}



	<!-- Filter/Search Section -->
	<div class="m-auto flex-grow-1">
		<div class="form-horizontal mb-3">
			<div class="d-flex justify-content-between align-items-center">
				<div>
					<button class="btn btn-dark @ViewData["Filtering"]"
							type="button"
							id="filterToggle"
							data-bs-toggle="collapse"
							data-bs-target="#collapseFilter"
							aria-expanded="false"
							aria-controls="collapseFilter">
						Filter/Search @ViewData["numberFilters"]
					</button>
				</div>
				<a asp-action="Create" class="btn btn-primary" aria-label="Add a new opportunity">+ Add Opportunity</a>
			</div>

			@if (ViewData["numberFilters"] != null && ViewData["numberFilters"].ToString() != "0 Filters Applied")
			{
				<div class="filters-container mt-2">
					@if (!string.IsNullOrEmpty(ViewData["SearchString"] as string))
					{
						<span class="custom-filter-badge me-2">
							Opportunity Name: @ViewData["SearchString"]
							<button type="button" class="ms-2 clear-btn" aria-label="Clear" onclick="clearFilter('SearchString')">x</button>
						</span>
					}
					@if (ViewData["StatusFilter"] != null)
					{
						<span class="custom-filter-badge me-2">
							Status: @ViewData["StatusFilter"]
							<button type="button" class="ms-2 clear-btn" aria-label="Clear" onclick="clearFilter('Titles')">x</button>
						</span>
					}
					@if (ViewData["PriorityFilter"] != null)
					{
						<span class="custom-filter-badge me-2">
							Priority: @ViewData["PriorityFilter"]
							<button type="button" class="ms-2 clear-btn" aria-label="Clear" onclick="clearFilter('Departments')">x</button>
						</span>
					}
				</div>


			}

		</div>
		<div class="collapse @ViewData["ShowFilter"] mt-2" id="collapseFilter">
			<div class="card card-body bg-light">
				<div class="row">
					<div class="form-group col-md-3">
						<label for="search-name" class="control-label">Search By Name:</label>
						@Html.TextBox("SearchString", null, new { @class = "form-control", id = "search-name" })
					</div>

					<div class="form-group col-md-3">
						<label for="filter-status" class="control-label">Filter by Opportunity Status:</label>
						@Html.DropDownList("status", new SelectList(Enum.GetValues(typeof(OpportunityStatus))), "All Statuses", new { @class = "form-control", id = "filter-status" })
					</div>

					<div class="form-group col-md-3">
						<label for="filter-priority" class="control-label">Filter by Opportunity Priority:</label>
						@Html.DropDownList("priority", new SelectList(Enum.GetValues(typeof(OpportunityPriority))), "All Priorities", new { @class = "form-control", id = "filter-priority" })
					</div>
					<div class="form-group col-md-4 d-flex align-items-end mt-2">
						<input type="submit" name="actionButton" value="Apply Filters" class="btn btn-primary me-2" />
						<a asp-action="Index" class="btn btn-dark">Clear Filters</a>
					</div>
				</div>
			</div>
		</div>



		<div>
			<label class="control-label">@ViewData["records"]</label>
		</div>

		<table class="table table-bordered table-striped" id="opportunity-table" aria-labelledby="opportunities">
			<caption class="sr-only">Opportunity table showing filtered results</caption>
			<thead class="thead-dark">
				<tr>
					<th scope="col" class="table-head">
						@{

							var isCurrentSortField = sortField == "Opportunity Name";
							var sortOrderIndicator = isCurrentSortField ? (sortDirection == "asc" ? "↑" : "↓") : "";
						}


						@if (isCurrentSortField)
						{
							<input type="submit" name="actionButton" value="Opportunity Name" class="btn btn-link" aria-label="Sort by Opportunity Name" />
							<span class="SortIndicator">@sortOrderIndicator</span>
						}
						else
						{
							<input type="submit" name="actionButton" value="Opportunity Name" class="btn btn-link" aria-label="Sort by Opportunity Name" />
						}
					</th>
					<th scope="col" class="table-head">
						@Html.DisplayNameFor(model => model.OpportunityAction)
					</th>
					<th scope="col" class="table-head">
						@Html.DisplayNameFor(model => model.POC)
					</th>
					<th scope="col" class="table-head">
						@Html.DisplayNameFor(model => model.Account)
					</th>
					<th scope="col" class="table-head">
						@Html.DisplayNameFor(model => model.Interaction)
					</th>
					<th scope="col" class="table-head">
						@Html.DisplayNameFor(model => model.LastContact)
					</th>
					<th scope="col" class="table-head">
						@Html.DisplayNameFor(model => model.OpportunityStatus)
					</th>
					<th scope="col" class="table-head">
						@Html.DisplayNameFor(model => model.OpportunityPriority)
					</th>
					<th></th>
				</tr>
			</thead>
			<tbody>
				@foreach (var item in Model)
				{
					<tr>
						<td>
							@Html.DisplayFor(modelItem => item.OpportunityName)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.OpportunityAction)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.POC)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Account)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Interaction)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.LastContact)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.OpportunityStatus)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.OpportunityPriority)
						</td>
						<td>
							<a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
							<a asp-action="Details" asp-route-id="@item.ID">Details</a> |
							<a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
						</td>
					</tr>
				}
			</tbody>
		</table>
		<partial name="_PagingNavBar" />
</form>


@section Scripts {
	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
	<script>
		function clearFilter(filterName){
			// Get the current URL
			var url = window.location.href.split('?')[0]; // Current URL without query string

			// Get the query parameters from the URL
			var params = new URLSearchParams(window.location.search);
			params.delete(filterName)

			// Reload the page with the updated query string (filters removed)
			window.location.href = url + '?' + params.toString();

		}
	</script>
<script type="text/javascript">
	var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
	var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
		return new bootstrap.Tooltip(tooltipTriggerEl)
	})
</script>
}
