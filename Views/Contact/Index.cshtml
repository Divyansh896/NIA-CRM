@model IEnumerable<NIA_CRM.Models.Contact>

@{
    ViewData["Title"] = "Index";
}



<div class="d-flex flex-row align-items-center justify-content-between mb-4">
    <h1 class="mb-0" id="contacts-title">Contacts</h1>
    <a asp-action="Create" class="btn btn-primary" aria-label="Add a new contact">+ Add Contact</a>
</div>

<form asp-action="Index" method="get" aria-labelledby="contacts-title">
    <input type="hidden" name="sortDirection" value="@ViewData["sortDirection"]" />
    <input type="hidden" name="sortField" value="@ViewData["sortField"]" />

    <div class="d-flex flex-row position-relative overflow-hidden">
        <!-- Filter/Search Section -->
        <div class="m-auto flex-grow-1">
            <div class="form-horizontal">
                <button class="btn btn-dark @ViewData["Filtering"]" type="button" data-bs-toggle="collapse" id="filterToggle"
                        data-bs-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter"
                        aria-label="Toggle filter and search options">
                    Filter/Search @ViewData["numberFilters"]
                </button>
                <br />
                <div class="collapse @ViewData["ShowFilter"] mt-2" id="collapseFilter">
                    <div class="card card-body bg-light">
                        <div class="row">
                            <div class="form-group col-md-3">
                                <label for="search-name" class="control-label">Search By Name:</label>
                                @Html.TextBox("SearchString", null, new { @class = "form-control", id = "search-name" })
                            </div>

                            <div class="form-group col-md-3">
                                <label for="filter-title" class="control-label">Filter by Title:</label>
                                @Html.DropDownList("Titles", null, "All Titles", htmlAttributes: new { @class = "form-control", id = "filter-title" })
                            </div>

                            <div class="form-group col-md-3">
                                <label for="filter-department" class="control-label">Filter by Department:</label>
                                @Html.DropDownList("Departments", null, "All Departments", htmlAttributes: new { @class = "form-control", id = "filter-department" })
                            </div>

                            <div class="form-group col-md-2">
                                <label class="control-label" for="OnlyVIP">Only VIPs</label>
                                @Html.CheckBox("IsVIP", htmlAttributes: new { @class = "form-check-input", id = "OnlyVIP" })
                            </div>

                            <div class="form-group col-md-2 align-self-end mt-2">
                                <input type="submit" name="actionButton" value="Filter" class="btn btn-primary me-2" />
                                <a asp-action="Index" class="btn btn-dark" aria-label="Clear all filters">Clear</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div>
                <label class="control-label">@ViewData["records"]</label>
            </div>

            <!-- Contacts Table -->
            <table class="table table-bordered table-striped" id="contacts-table" aria-labelledby="contacts-title">
                <caption class="sr-only">Contacts table showing filtered results</caption>
                <thead class="thead-dark">
                    <tr>
                        <th scope="col" class="table-head">
                            <input type="submit" name="actionButton" value="Contact Name" class="btn btn-link" aria-label="Sort by Contact Name" />
                        </th>
                        <th scope="col" class="table-head">@Html.DisplayNameFor(model => model.Title)</th>
                        <th scope="col" class="table-head">@Html.DisplayNameFor(model => model.Department)</th>
                        <th scope="col" class="table-head">@Html.DisplayNameFor(model => model.Email)</th>
                        <th scope="col" class="table-head">@Html.DisplayNameFor(model => model.Phone)</th>
                        <th scope="col" class="table-head">@Html.DisplayNameFor(model => model.LinkedInUrl)</th>
                        <th scope="col" class="table-head">@Html.DisplayNameFor(model => model.IsVip)</th>
                        <th scope="col" class="table-head">@Html.DisplayNameFor(model => model.Member)</th>
                        
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr class="clickable-row" data-id="@item.Id" title="Click on row to get preview">
                            <td>@Html.DisplayFor(modelItem => item.Summary)</td>
                            <td>@Html.DisplayFor(modelItem => item.Title)</td>
                            <td>@Html.DisplayFor(modelItem => item.Department)</td>
                            <td>@Html.DisplayFor(modelItem => item.Email)</td>
                            <td>@Html.DisplayFor(modelItem => item.Phone)</td>
                            <td>
                                <a href="@item.LinkedInUrl" target="_blank" aria-label="Open LinkedIn profile of @item.FirstName @item.LastName">View LinkedIn</a>
                            </td>
                            <td>@Html.DisplayFor(modelItem => item.IsVip)</td>
                            <td>@Html.DisplayFor(modelItem => item.Member.MemberName)</td>
                            
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Preview Container -->
        <div id="previewContainer" class="preview-content hidden" role="region" aria-labelledby="previewTitle">
            <h2 id="previewTitle" class="sr-only">Preview Section</h2>
            <!-- Preview content will be dynamically injected here -->
        </div>
    </div>

    <partial name="_PagingNavBar" />
</form>

@section Scripts  {
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
          $(document).ready(function () {
        // Initially hide the preview content
        $('#previewContainer').addClass('hidden');

        // Handle click event on rows with the "clickable-row" class
        $(document).on('click', '.clickable-row', function () {
            var contactId = $(this).data('id'); // Get the Contact ID from the row's data attribute

            if (!contactId) {
                console.error('No contact ID found for this row.');
                return;
            }

            // Make an AJAX request to get the partial view for the selected contact
            $.ajax({
                url: '/Contact/GetContactPreview', // Adjust the URL to match your routing
                type: 'GET',
                data: { id: contactId },
                success: function (result) {
                    // Insert the result (partial view) into the preview container
                    $('#previewContainer').html(result);
                    $('#previewContainer').removeClass('hidden').addClass('visible'); // Show the preview
                },
                error: function () {
                    alert('An error occurred while loading the preview.');
                }
            });
        });

        // Window click listener to collapse preview when clicked outside
        $(window).click(function (event) {
            if (!$(event.target).closest('#previewContainer, .clickable-row').length) {
                $('#previewContainer').removeClass('visible').addClass('hidden');
            }
        });

        // Prevent the preview container from closing when clicked inside
        $('#previewContainer').click(function (event) {
            event.stopPropagation(); // Stop the event from propagating to the window
        });
    });

</script>
<script type="text/javascript">
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl)
    })
</script>
}