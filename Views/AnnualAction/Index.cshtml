@model IEnumerable<NIA_CRM.Models.AnnualAction>

@{
    ViewData["Title"] = "Index";
}

<div class="d-flex flex-row align-items-center justify-content-between mb-4">
    <h1 class="mb-0" id="contacts-title">Annual Actions</h1>
</div>

<form asp-action="ImportExcel" method="post" enctype="multipart/form-data">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <a class="btn btn-dark" asp-action="ExportToExcel"> <i class="fa fa-file-excel text-white"></i>
                Export Excel</a>
        <button type="submit" class="btn btn-dark">
            <i class="fa fa-file-import"></i> Import Excel
        </button>
        </div>
        
    </div>
</form>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}
<p>
   
    <input type="file" name="file" class="form-control me-2" required />
</p>

<form asp-action="Index" method="get" aria-labelledby="contacts-title">
    <input type="hidden" name="sortDirection" value="@ViewData["sortDirection"]" />
    <input type="hidden" name="sortField" value="@ViewData["sortField"]" />
    @{
        var sortField = ViewData["sortField"]?.ToString();
        var sortDirection = ViewData["sortDirection"]?.ToString();
    }

    <div class="m-auto flex-grow-1">
        <div class="form-horizontal mb-3">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <button class="btn btn-dark @ViewData["Filtering"]"
                            type="button"
                            id="filterToggle"
                            data-bs-toggle="collapse"
                            data-bs-target="#collapseFilter"
                            aria-expanded="false"
                            aria-controls="collapseFilter">
                        Filter/Search @ViewData["numberFilters"]
                    </button>
                </div>
                <a asp-action="Create" class="btn btn-primary" aria-label="Add a new event">+ Add New Action</a>
            </div>

            @if (ViewData["numberFilters"] != null && ViewData["numberFilters"].ToString() != "0 Filters Applied")
            {
                <div class="filters-container mt-2">
                    @if (!string.IsNullOrEmpty(ViewData["SearchString"] as string))
                    {
                        <span class="custom-filter-badge me-2">
                            Annual Action Name: @ViewData["EventString"]
                            <button type="button" class="ms-2 clear-btn" aria-label="Clear" onclick="clearFilter('SearchString')">x</button>
                        </span>
                    }
                    @if (ViewData["DateFilter"] != null)
                    {
                        <span class="custom-filter-badge me-2">
                            Date: @Convert.ToDateTime(ViewData["DateFilter"]).ToString("yyyy-MM-dd")
                            <button type="button" class="ms-2 clear-btn" aria-label="Clear" onclick="clearFilter('DateFilter')">x</button>
                        </span>
                    }
                </div>
            }
        </div>

        <div>
            <label class="control-label">@ViewData["records"]</label>
        </div>

        <div class="collapse @ViewData["ShowFilter"] mt-2" id="collapseFilter">
            <div class="card card-body bg-light">
                <div class="row">
                    <div class="form-group col-md-3">
                        <label for="search-name" class="control-label">Search By Annual Action Name:</label>
                        @Html.TextBox("SearchString", null, new { @class = "form-control", id = "search-name" })
                    </div>

                    <div class="form-group col-md-3">
                        <label for="filter-date" class="control-label">Filter by Date:</label>
                        <input type="date" name="date" class="form-control" id="filter-date" value="@ViewData["DateFilter"]" />
                    </div>
                    <div class="form-group col-md-4 d-flex align-items-end mt-2">
                        <input type="submit" name="actionButton" value="Apply Filters" class="btn btn-primary me-2" />
                        <a asp-action="Index" class="btn btn-dark">Clear Filters</a>
                    </div>
                </div>
            </div>
        </div>
        <table class="table table-bordered table-striped" id="event-table" aria-labelledby="strategies">
            <caption class="sr-only">Strategy table showing filtered results</caption>
            <thead class="thead-dark">
            <tr>
                <th scope="col" class="table-head">
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th scope="col" class="table-head">
                    @Html.DisplayNameFor(model => model.Note)
                </th >
                <th scope="col" class="table-head">
                    @Html.DisplayNameFor(model => model.Date)
                </th scope="col" class="table-head">
                <th scope="col" class="table-head">
                    @Html.DisplayNameFor(model => model.Asignee)
                </th >
                <th scope="col" class="table-head"> 
                    @Html.DisplayNameFor(model => model.AnnualStatus)
                </th>
            </tr>
        </thead>
        <tbody>
    @foreach (var item in Model) {
            <tr class="clickable-row" data-id="@item.ID" title="Click on row to get preview">
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Note)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Asignee)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AnnualStatus)
                </td>
            </tr>
    }
        </tbody>
    </table>
    </div>
            <partial name="_PagingNavBar" />
    </form>


    <div id="previewContainer" class="preview-content hidden"></div>






@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


    @* Show Preview and save note function script  *@
    <script>
        $(document).ready(function () {
            // Initially hide the preview content
            $('#previewContainer').addClass('hidden');

            // Handle click event on rows with the "clickable-row" class
            $(document).on('click', '.clickable-row', function () {
                var contactId = $(this).data('id'); // Get the Contact ID from the row's data attribute

                if (!contactId) {
                    console.error('No contact ID found for this row.');
                    return;
                }

                // Make an AJAX request to get the partial view for the selected contact
                $.ajax({
                    url: '/AnnualAction/GetAnnualActionPreview', // Adjust the URL to match your routing
                    type: 'GET',
                    data: { id: contactId },
                    success: function (result) {
                        // Insert the result (partial view) into the preview container
                        $('#previewContainer').html(result);
                        $('#previewContainer').removeClass('hidden').addClass('visible'); // Show the preview
                        // Assign the close event to the button inside the loaded preview
                        $('#previewContainer').find('input[name="btnClose"]').on('click', function () {
                            $('#previewContainer').removeClass('visible').addClass('hidden');
                        });

                         // Assign the save event to the save button inside the loaded preview
                        $('#previewContainer').find('#saveNoteBtn').on('click', function (e) {
                            e.preventDefault(); // Prevent default button behavior

                            var contactId = $("#ContactId").val();
                            var note = $("#Note").val();

                            if (!contactId || !note.trim()) {
                                $("#responseMessage").text("Note cannot be empty!").addClass("text-danger").removeClass("text-success").show();
                                return;
                            }

                            $.ajax({
                                type: "POST",
                                url: "/AnnualAction/SaveAnnualActionNote",
                                data: { id: contactId, note: note },
                                dataType: "json",
                                success: function (response) {
                                    if (response.success) {
                                        $("#responseMessage").text(response.message).addClass("text-success").removeClass("text-danger").show();
                                    } else {
                                        $("#responseMessage").text(response.message).addClass("text-danger").removeClass("text-success").show();
                                    }
                                },
                                error: function () {
                                    $("#responseMessage").text("An unexpected error occurred.").addClass("text-danger").removeClass("text-success").show();
                                }
                            });
                        });
                    },
                    error: function () {
                        alert('An error occurred while loading the preview.');
                    }
                });
            });

            // Window click listener to collapse preview when clicked outside
            $(window).click(function (event) {
                if (!$(event.target).closest('#previewContainer, .clickable-row').length) {
                    $('#previewContainer').removeClass('visible').addClass('hidden');
                }
            });

            // Prevent the preview container from closing when clicked inside
            $('#previewContainer').click(function (event) {
                event.stopPropagation(); // Stop the event from propagating to the window
            });
        });

        function clearFilter(filterName){
            // Get the current URL
            var url = window.location.href.split('?')[0]; // Current URL without query string

            // Get the query parameters from the URL
            var params = new URLSearchParams(window.location.search);
            params.delete(filterName)

            // Reload the page with the updated query string (filters removed)
            window.location.href = url + '?' + params.toString();
            
        }


    </script>
}
