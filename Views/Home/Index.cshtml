@model IEnumerable<NIA_CRM.Models.Member>

@{
    ViewData["Title"] = "Index";
}
<!--WIDGETS-->
<div class="content" id="content" role="main" aria-labelledby="dashboard-title">

    <div class="d-flex flex-row align-items-center justify-content-between mb-4">
        <h1 id="dashboard-title">Dashboard</h1>
        @* <button class="btn btn-primary">Customize</button> *@
    </div>

    <div class="row" role="region" aria-labelledby="dashboard-stats">
        <h2 id="dashboard-stats" class="sr-only">Dashboard Statistics</h2>

        <!-- Card 1: Total Members -->
        <div class="col-md-4">
            <div class="card text-light vidget-MemebrCount" role="group" aria-labelledby="total-members-title">
                <div class="card-body">
                    <div class="row align-items-center">
                        <!-- Left Column (Title & Text) -->
                        <div class="col-6 d-flex flex-column justify-content-center">
                            <p class="card-title title-vidget" id="total-members-title" role="heading" aria-level="3">Total Members</p>
                            <p class="card-text fixed-text" aria-live="polite">@ViewData["MemberCount"]</p>
                        </div>
                        <!-- Right Column (Blank Space) -->
                        <div class="col-6"></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Card 2: Members in Copperport -->
        <div class="col-md-4">
            <div class="card text-light vidget-MemebrCity" role="group" aria-labelledby="members-copperport-title">
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col-6 d-flex flex-column justify-content-center">
                            <p class="card-title title-vidget" id="members-copperport-title" role="heading" aria-level="3">Members in Welland</p>
                            <p class="card-text fixed-text" aria-live="polite">@Model.Count(m => m.Addresses.Any(a => a.City == "Welland"))</p>
                        </div>
                        <div class="col-6"></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Card 3: VIP Clients -->
        <div class="col-md-4">

            <div class="card text-light vidget-Memebr" role="group" aria-labelledby="vip-clients-title">
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col-6 d-flex flex-column justify-content-center">
                            <p class="card-title title-vidget" id="vip-clients-title" role="heading" aria-level="3">Associate Members</p>
                            <p class="card-text fixed-text" aria-live="polite">8</p>
                            <!--<p class="card-text fixed-text" aria-live="polite">@ViewData["VipCount"]</p>-->
                        </div>
                        <div class="col-6"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        $(document).ready(function () {
            // Initially hide the preview container
            $('#previewContainer').addClass('hidden');

            // Handle row clicks
            $(document).on('click', '.clickable-row', function () {
                var memberId = $(this).data('id'); // Get the Member ID
                if (!memberId) {
                    console.error('No member ID found.');
                    return;
                }

                // AJAX request to fetch member details
                $.ajax({
                    url: '/Home/GetMemberPreview', // Adjust the route as necessary
                    type: 'GET',
                    data: { id: memberId },
                    success: function (result) {
                        $('#previewContainer').html(result).removeClass('hidden').addClass('visible');
                    },
                    error: function () {
                        alert('Error fetching member details.');
                    }
                });
            });

            // Hide the preview container when clicking outside
            $(window).click(function (event) {
                if (!$(event.target).closest('#previewContainer, .clickable-row').length) {
                    $('#previewContainer').removeClass('visible').addClass('hidden');
                }
            });

            // Prevent clicks inside the preview container from propagating
            $('#previewContainer').click(function (event) {
                event.stopPropagation();
            });
        });
    </script>

    <script type="text/javascript">
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })
    </script>
}
