@model IEnumerable<NIA_CRM.Models.Member>

@{
    ViewData["Title"] = "Index";
}
<!--WIDGETS-->
<div class="content" id="content" role="main" aria-labelledby="dashboard-title">

    <div class="d-flex flex-row align-items-center justify-content-between mb-4">
        <h1 id="dashboard-title">Dashboard</h1>
        <button class="btn btn-primary">Customize</button>
    </div>

    <div class="row" role="region" aria-labelledby="dashboard-stats">
        <h2 id="dashboard-stats" class="sr-only">Dashboard Statistics</h2>

        <!-- Card 1 -->
        <div class="col-md-4">
            <div class="card text-light" role="group" aria-labelledby="total-members-title">
                <div class="card-body text-center">
                    <p class="card-title" id="total-members-title" role="heading" aria-level="3">Total Members</p>
                    <p class="card-text" aria-live="polite">@ViewData["MemberCount"]</p>
                </div>
            </div>
        </div>

        <!-- Card 2 -->
        <div class="col-md-4">
            <div class="card text-light" role="group" aria-labelledby="members-copperport-title">
                <div class="card-body text-center">
                    <p class="card-title" id="members-copperport-title" role="heading" aria-level="3">Members in Copperport</p>
                    <p class="card-text" aria-live="polite">@Model.Count(m => m.Addresses.Any(a => a.City == "Copperport"))</p>
                </div>
            </div>
        </div>

        <!-- Card 3 -->
        <div class="col-md-4">
            <div class="card text-light" role="group" aria-labelledby="vip-clients-title">
                <div class="card-body text-center">
                    <p class="card-title" id="vip-clients-title" role="heading" aria-level="3">VIP Members</p>
                    <p class="card-text" aria-live="polite">@ViewData["VipCount"]</p>
                </div>
            </div>
        </div>
    </div>
</div>

<!--Member Table-->

<h2>Member Details</h2>

<form asp-action="Index" method="get" aria-labelledby="form-title">

    <div id="form-title" class="sr-only">Filter and Search Form</div>



    <div class="table-container">

        <!-- Filter/Search Button -->
        <input type="hidden" name="sortDirection" value="@ViewData["sortDirection"]" />
        <input type="hidden" name="sortField" value="@ViewData["sortField"]" />

        <div class="form-horizontal mb-3">
            <div class="d-flex justify-content-between align-items-center">

                <button class="btn btn-dark @ViewData["Filtering"]"
                        type="button"
                        id="filterToggle"
                        data-bs-toggle="collapse"
                        data-bs-target="#collapseFilter"
                        aria-expanded="false"
                        aria-controls="collapseFilter">
                    Filter/Search @ViewData["numberFilters"]
                </button>
                <a asp-controller="Member" asp-action="Create" class="btn btn-primary">+ Add Member</a>
            </div>

            <div class="collapse @ViewData["ShowFilter"] mt-2" id="collapseFilter">
                <div class="card card-body bg-light" role="region" aria-labelledby="filter-section-title">
                    <h2 id="filter-section-title" class="sr-only">Filter and Search Options</h2>
                    <div class="row">
                        @* <div class="form-group col-md-4"> *@
                        @*     <label for="SearchString" class="control-label">Search By Member Name:</label> *@
                        @*     @Html.TextBox("SearchString", null, new { @class = "form-control", placeholder = "Enter subject..." }) *@
                        @*     <span id="search-help" class="sr-only">Type a member's name to search.</span> *@
                        @* </div> *@

                        <div class="form-group col-md-4">
                            <label for="Members" class="control-label">Filter by Industry:</label>
                            @Html.DropDownList("Members", null, "All Industry", htmlAttributes: new { @class = "form-control" })
                            <span id="industry-help" class="sr-only">Select an industry to filter members by.</span>
                        </div>
                        <div class="form-group col-md-4"> 
                             <label for="MembershipTypes" class="control-label">Filter by Membership Types:</label> 
                             @Html.DropDownList("MembershipTypes", null, "All MembershipTypes", htmlAttributes: new { @class = "form-control" }) 
                            <span id="industry-help" class="sr-only">Select Membership Types to filter members by.</span> 
                         </div> 

                        <div class="form-group col-md-4 d-flex align-items-end mt-2">
                            <input type="submit" name="actionButton" value="Apply Filters" class="btn btn-primary me-2" />
                            <a asp-action="Index" class="btn btn-dark">Clear Filters</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!--Table Data-->
    <div class="table-container mt-4" role="region" aria-labelledby="table-title" style="position: relative; overflow: auto; border: 1px solid #ddd;">
        <h2 id="table-title" class="sr-only">Members Detail Table</h2>
        <table class="table table-bordered table-striped" id="myTable" aria-label="Members Detail Table">
            <thead class="thead-dark">
                <tr>

                    <th class="table-head-static"><!--Empty header for logos --></th>

                    <th scope="col" class="table-head">
                        <input type="submit" name="actionButton" value="Industry" class="btn btn-link" aria-label="Sort by Industry" />
                    </th>
                    <th scope="col" class="table-head">
                        NAICS Code
                    </th>
                    <th scope="col" class="table-head">Address</th>
                    <th scope="col" class="table-head">Contact Name</th>
                    <th scope="col" class="table-head">Contact Title</th>
                    <th scope="col" class="table-head">Contact Department</th>
                    <th scope="col" class="table-head">Contact Email</th>
                    <th scope="col" class="table-head">Contact Phone</th>
                    <th scope="col" class="table-head">LinkedIn</th>
                    @* <th scope="col" class="table-head">VIP Status</th>
                    @* <th scope="col" class="table-head">Pin Column</th> *@
                </tr>
            </thead>
            <tbody>
                @foreach (var member in Model)
                {
                    <tr class="clickable-row" data-id="@member.ID" title="Click on row to get preview">
                        <td class="table-row-static">
                            @{
                                if (member.MemberThumbnail?.Content != null)
                                {
                                    string imageBase64 = Convert.ToBase64String(member.MemberThumbnail.Content);
                                    string imageSrc = string.Format("data:" + member.MemberThumbnail.MimeType + ";base64,{0}", imageBase64);
                                    <img src="@imageSrc" alt="Profile Picture of @member?.MemberName"
                                         title="Profile Picture of @member?.MemberName" class="img-fluid rounded" />
                                }
                                else
                                {

                                    <img src="images/blankProfile.jpg" alt="blank profile picture"
                                         title="blank profile picture" class="img-fluid rounded" />
                                }
                            }
                        </td>

                        <td>@Html.DisplayFor(modelItem => member.MemberName)</td>
                        <td>
                            @if (member.IndustryNAICSCodes != null && member.IndustryNAICSCodes.Any())
                            {
                                <ul class="list-unstyled mb-0">
                                    @foreach (var industryNAICS in member.IndustryNAICSCodes)
                                    {
                                        <li>@industryNAICS.NAICSCode.Code</li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <span class="text-muted">No NAICS Code</span>
                            }
                        </td>

                        <td>
                            <div style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">
                                @foreach (var address in member.Addresses)
                                {
                                    @address.AddressLine1
                                    @if (!string.IsNullOrEmpty(address.AddressLine2))
                                    {
                                        @address.AddressLine2
                                    }
                                    <br />
                                    @address.City @address.StateProvince @address.PostalCode @address.Country
                                }
                            </div>
                        </td>
                        <!-- Display contact information within the same row -->
                        @if (member.Contacts != null && member.Contacts.Count > 0)
                        {
                            @foreach (var contact in member.Contacts)
                            {
                                <td>@contact.Summary</td>
                                <td>@contact.Title</td>
                                <td>@contact.Department</td>
                                <td>
                                    <a href="mailto:@contact.Email">Email</a>
                                </td>

                                <td>
                                    @(contact.Phone.Length == 10
                                        ? $"({contact.Phone.Substring(0, 3)}) {contact.Phone.Substring(3, 3)}-{contact.Phone.Substring(6, 4)}"
                                        : contact.Phone)
                                </td>

                                <td>
                                    @if (!string.IsNullOrEmpty(contact.LinkedInUrl))
                                    {
                                        <a href="@contact.LinkedInUrl" target="_blank" aria-label="View LinkedIn profile for @contact.Summary">LinkedIn</a>
                                    }
                                </td>
                                @* <td>@(contact.IsVip ? "Yes" : "No")</td> *@
                            }
                        }
                        else
                        {
                            <td colspan="7">No Contacts Available</td>
                        }

                        @* <td> *@
                        @*     <button class="btn btn-primary btn-sm pin-column" onclick="pinColumn(this)" aria-label="Pin this column"> *@
                        @*         <i class="fas fa-thumbtack"></i> <!-- Pin icon --> *@
                        @*     </button> *@
                        @* </td> *@
                    </tr>
                }
            </tbody>
        </table>
        <div id="previewContainer" class="preview-content hidden"></div>
    </div>
    <partial name="_PagingNavBar" />

</form>


@section Scripts {

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        $(document).ready(function () {
            // Initially hide the preview container
            $('#previewContainer').addClass('hidden');

            // Handle row clicks
            $(document).on('click', '.clickable-row', function () {
                var memberId = $(this).data('id'); // Get the Member ID
                if (!memberId) {
                    console.error('No member ID found.');
                    return;
                }

                // AJAX request to fetch member details
                $.ajax({
                    url: '/Home/GetMemberPreview', // Adjust the route as necessary
                    type: 'GET',
                    data: { id: memberId },
                    success: function (result) {
                        $('#previewContainer').html(result).removeClass('hidden').addClass('visible');
                    },
                    error: function () {
                        alert('Error fetching member details.');
                    }
                });
            });

            // Hide the preview container when clicking outside
            $(window).click(function (event) {
                if (!$(event.target).closest('#previewContainer, .clickable-row').length) {
                    $('#previewContainer').removeClass('visible').addClass('hidden');
                }
            });

            // Prevent clicks inside the preview container from propagating
            $('#previewContainer').click(function (event) {
                event.stopPropagation();
            });
        });
    </script>

    <script type="text/javascript">
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })
    </script>
}
