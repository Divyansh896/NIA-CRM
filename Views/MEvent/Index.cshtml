@model IEnumerable<NIA_CRM.Models.MEvent>

@{
    ViewData["Title"] = "Index";
}

<h1>Events</h1>

<p>
    
    <input type="file" name="file" class="form-control me-2" required />
</p>

<form asp-action="ImportOpportunitiesFromExcel" method="post" enctype="multipart/form-data">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <a class="btn btn-dark" asp-action="ExportToExcel"><i class="fa fa-file-excel text-white"></i> 
                Export Excel</a>
        
            <button type="submit" class="btn btn-dark">
            <i class="fa fa-file-import"></i> Import Excel
        </button>
        </div>
        <a class="btn btn-primary" asp-action="Create">Create New</a>
    </div>
</form>
@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}

<table class="table">
    <thead>
        <tr>
            <th scope="col" class="table-head">
                @Html.DisplayNameFor(model => model.EventName)
            </th>
            <th scope="col" class="table-head">
                @Html.DisplayNameFor(model => model.EventDescription)
            </th>
            <th scope="col" class="table-head">
                @Html.DisplayNameFor(model => model.EventLocation)
            </th>
            <th scope="col" class="table-head">
                @Html.DisplayNameFor(model => model.EventDate)
            </th>
            <th scope="col" class="table-head">
                Participants
            </th>
            <th scope="col" class="table-head"></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.EventName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EventDescription)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EventLocation)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EventDate)
            </td>
                <td class="d-none d-lg-table-cell">
                    @{
                        int specCount = item.MemberEvents.Count;
                        if (specCount > 0)
                        {
                            string firstSpec = item.MemberEvents.FirstOrDefault().Member.MemberName;
                            if (specCount > 1)
                            {
                                string specList = "";//Html string of specialty names separated by <br /> tags
                                var s = item.MemberEvents.ToList();
                                for (int i = 1; i < specCount; i++)//Skip the first because we have it already
                                {
                                    specList += s[i].Member.MemberName + " <br />";
                                }
                                <a class="" role="button" data-bs-toggle="collapse" href="#collapseSpecalty@(item.Id)"
                                   aria-expanded="false" aria-controls="collapseSpecalty@(item.Id)">
                                    @firstSpec <span class="badge bg-info">@specCount</span>
                                </a>
                                <div class="collapse" id="collapseSpecalty@(item.Id)">
                                    @Html.Raw(specList)
                                </div>
                            }
                            else
                            {
                                @firstSpec
                            }
                        }
                    }
                </td>
                <td class ="d-flex flex-column">
                    <a class="btn btn-light mb-2" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    <a class="btn btn-light" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
