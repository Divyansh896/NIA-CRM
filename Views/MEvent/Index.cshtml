@model IEnumerable<NIA_CRM.Models.MEvent>

@{
    ViewData["Title"] = "Index";
}

<h1>Events</h1>

<form>
    <input type="hidden" name="sortDirection" value="@ViewData["sortDirection"]" />
    <input type="hidden" name="sortField" value="@ViewData["sortField"]" />
    @{
        var sortField = ViewData["sortField"]?.ToString();
        var sortDirection = ViewData["sortDirection"]?.ToString();
    }

    <div class="m-auto flex-grow-1">
        <div class="form-horizontal mb-3">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <button class="btn btn-dark @ViewData["Filtering"]"
                            type="button"
                            id="filterToggle"
                            data-bs-toggle="collapse"
                            data-bs-target="#collapseFilter"
                            aria-expanded="false"
                            aria-controls="collapseFilter">
                        Filter/Search @ViewData["numberFilters"]
                    </button>
                </div>
                <a asp-action="Create" class="btn btn-primary" aria-label="Add a new event">+ Add Event</a>
            </div>

            @if (ViewData["numberFilters"] != null && ViewData["numberFilters"].ToString() != "0 Filters Applied")
            {
                <div class="filters-container mt-2">
                    @if (!string.IsNullOrEmpty(ViewData["SearchString"] as string))
                    {
                        <span class="custom-filter-badge me-2">
                            Event Name: @ViewData["EventString"]
                            <button type="button" class="ms-2 clear-btn" aria-label="Clear" onclick="clearFilter('SearchString')">x</button>
                        </span>
                    }
                    @if (ViewData["DateFilter"] != null)
                    {
                        <span class="custom-filter-badge me-2">
                            Date: @Convert.ToDateTime(ViewData["DateFilter"]).ToString("yyyy-MM-dd")
                            <button type="button" class="ms-2 clear-btn" aria-label="Clear" onclick="clearFilter('DateFilter')">x</button>
                        </span>
                    }
                </div>
            }
        </div>

        <div class="collapse @ViewData["ShowFilter"] mt-2" id="collapseFilter">
            <div class="card card-body bg-light">
                <div class="row">
                    <div class="form-group col-md-3">
                        <label for="search-name" class="control-label">Search By Name:</label>
                        @Html.TextBox("SearchString", null, new { @class = "form-control", id = "search-name" })
                    </div>
                    <div class="form-group col-md-3">
                        <label for="filter-date" class="control-label">Filter by Event Date:</label>
                        <input type="date" name="date" class="form-control" id="filter-date" value="@ViewData["DateFilter"]" />
                    </div>
                    <div class="form-group col-md-4 d-flex align-items-end mt-2">
                        <input type="submit" name="actionButton" value="Apply Filters" class="btn btn-primary me-2" />
                        <a asp-action="Index" class="btn btn-dark">Clear Filters</a>
                    </div>
                </div>
            </div>
        </div>

        <div>
            <label class="control-label">@ViewData["records"]</label>
        </div>

        <table class="table table-bordered table-striped" id="event-table" aria-labelledby="events">
            <caption class="sr-only">Event table showing filtered results</caption>
            <thead class="thead-dark">
                <tr>
                    <th scope="col" class="table-head">
                        @Html.DisplayNameFor(model => model.EventName)
                    </th>
                    <th scope="col" class="table-head">
                        @Html.DisplayNameFor(model => model.EventDescription)
                    </th>
                    <th scope="col" class="table-head">
                        @Html.DisplayNameFor(model => model.EventLocation)
                    </th>
                    <th scope="col" class="table-head">
                        @Html.DisplayNameFor(model => model.EventDate)
                    </th>
                    <th scope="col" class="table-head">Participants</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr class="clickable-row" data-id="@item.Id" title="Click on row to get preview">
                        <td>@Html.DisplayFor(modelItem => item.EventName)</td>
                        <td>@Html.DisplayFor(modelItem => item.EventDescription)</td>
                        <td>@Html.DisplayFor(modelItem => item.EventLocation)</td>
                        <td>@Html.DisplayFor(modelItem => item.EventDate)</td>
                        <td class="d-none d-lg-table-cell">
                            @{
                                int specCount = item.MemberEvents.Count;
                            }
                            @if (specCount > 0)
                            {
                                string firstSpec = item.MemberEvents.FirstOrDefault().Member.MemberName;
                                if (specCount > 1)
                                {
                                    string specList = string.Join("<br />", item.MemberEvents.Skip(1).Select(s => s.Member.MemberName));
                                    <a class="member-toggle" role="button" data-bs-toggle="collapse" href="#collapseSpecalty@(item.Id)"
                                       aria-expanded="false" aria-controls="collapseSpecalty@(item.Id)">
                                        @firstSpec <span class="participant-badge">@specCount</span>
                                    </a>
                                    <div class="collapse" id="collapseSpecalty@(item.Id)">
                                        @Html.Raw(specList)
                                    </div>
                                }
                                else
                                {
                                    @firstSpec
                                }
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <partial name="_PagingNavBar" />
</form>

<div id="previewContainer" class="preview-content hidden"></div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#previewContainer').addClass('hidden');

            $(document).on('click', '.clickable-row', function () {
                var contactId = $(this).data('id');
                if (!contactId) {
                    console.error('No contact ID found for this row.');
                    return;
                }
                $.ajax({
                    url: '/MEvent/GetEventPreview',
                    type: 'GET',
                    data: { id: contactId },
                    success: function (result) {
                        $('#previewContainer').html(result).removeClass('hidden').addClass('visible');
                    },
                    error: function () {
                        alert('An error occurred while loading the preview.');
                    }
                });
            });
        });

        function clearFilter(filterName) {
            var url = window.location.href.split('?')[0];
            var params = new URLSearchParams(window.location.search);
            params.delete(filterName);
            window.location.href = url + '?' + params.toString();
        }
    </script>
}
